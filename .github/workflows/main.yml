name: TLAiBench

on: [push, workflow_dispatch]

## https://microsoft.github.io/genaiscript/reference/github-actions/
## https://docs.github.com/en/github-models/use-github-models/integrating-ai-models-into-your-development-workflow#using-ai-models-with-github-actions
permissions:
    models: read

jobs:
  benchmarks:
    name: TLAiBench

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Clone repo
        uses: actions/checkout@v4
        with:
            ## All history for git diff below to succeed.
            fetch-depth: 0

      ## Provision VSCode
      ##
      ## Note: VSCode is being used to host the TLA+ MCP servers. This choice is a a workaround, as VSCode is fundamentally a desktop/UI application,
      ## which introduces the complications below. I considered using code-server (https://github.com/coder/code-server), the headless version of VSCode,
      ## as an alternative. However, I couldn’t get it to automatically launch the TLA+ extension and its associated MCP servers. Another potential
      ## approach would be to refactor the TLA+ VSCode extension to allow the MCP servers to be launched independently—either as standalone processes or
      ## via GenAIScript.

      - name: Install VSCode
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
          echo "deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main" | sudo tee /etc/apt/sources.list.d/vscode.list
          sudo apt-get update
          sudo apt-get install -y code libgtk-3-dev xvfb

      - name: Install TLA+ VSCode extension
        run: |
          code --install-extension tlaplus.vscode-ide

      - name: Launch TLA+ VSCode extension hosting our MCP servers
        run: |
          export XDG_RUNTIME_DIR=/run/user/$(id -u)
          export DBUS_SESSION_BUS_ADDRESS=unix:path=$XDG_RUNTIME_DIR/bus
          dbus-daemon --session --address=$DBUS_SESSION_BUS_ADDRESS --nofork --nopidfile --syslog-only &
          mkdir -p ~/.vscode && echo '{ "disable-hardware-acceleration": true }' > ~/.vscode/argv.json
          mkdir -p ~/.vscode && echo '{ "tlaplus.mcp.port": 59071 }' > .vscode/settings.json
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          DISPLAY=:99 code --no-sandbox --disable-gpu --disable-workspace-trust .
          sleep 10  ## allow vscode to come up before moving to the next step.

      - name: Validate TLA MCP servers
        run: |
          ps axu|grep vscode
          nc -vz localhost 59071

      ## Provision TLA+ Tools
      ##

      - name: Get (nightly) TLC
        run: wget https://nightly.tlapl.us/dist/tla2tools.jar

      - name: Get (nightly) CommunityModules
        run: wget https://github.com/tlaplus/CommunityModules/releases/latest/download/CommunityModules-deps.jar

      ## Provision GenAIScript
      ##

      - name: Setup NodeJS
        ## https://github.com/actions/setup-node
        uses: actions/setup-node@v4
        with:
            node-version: "24"

      - name: Listing model configuration
        ## https://microsoft.github.io/genaiscript/reference/cli/#listing-model-configuration
        run: npx genaiscript scripts model genaisrc/translate.genai.mts
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      ## Run TLAi benchmarks
      ##

      - name: Run GenAIscript on the logic puzzles.
        ## Install genaiscript runtime: https://microsoft.github.io/genaiscript/reference/cli/
        run: npx --yes genaiscript run genaisrc/translate.genai.mts
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      ## Postprocess the TLAi benchmarks
      ##

      - name: Archive generated TLA+ specs (if any)
        uses: actions/upload-artifact@v4
        with:
          name: benchmarks
          path: |
            .genaiscript/*
            *.tla
            *.cfg
            !gold/*.tla
            !gold/*.cfg